# ==================================================================================================
# SPRING BOOT CONFIGURATION
# ==================================================================================================

server:
  port: ${server-config.port}
  servlet:
    context-path: /api

spring:
  datasource:
    url: ${spring-config.datasource.url}
    driver-class-name: ${spring-config.datasource.driver-class-name}
    username: ${spring-config.datasource.username}
    password: ${spring-config.datasource.password}
  flyway:
    baseline-on-migrate: true
    check-location: false
    out-of-order: true
    validate-on-migrate: true
    placeholders:
      sql-safe-updates-off: ${spring-config.flyway.placeholders.sql-safe-updates-off}
      sql-safe-updates-on: ${spring-config.flyway.placeholders.sql-safe-updates-on}
      max-statement-time: ${spring-config.flyway.placeholders.max-statement-time}
  jpa:
    hibernate.ddl-auto: validate
    properties:
      hibernate:
        show_sql: false
        format_sql: true
        dialect: ${spring-config.jpa.properties.hibernate.dialect}
        jdbc:
          time_zone: UTC
  profiles:
    active: native
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: ${spring-config.security.oauth2.client.registration.keycloak.client-id}
            client-secret: ${spring-config.security.oauth2.client.registration.keycloak.client-secret}
            clientName: ${spring-config.security.oauth2.client.registration.keycloak.clientName}
            authorization-grant-type: authorization_code
            redirect-uri: '{baseUrl}/login/oauth2/code/{registrationId}'
            scope:
              - openid
              - profile
              - email
        provider:
          keycloak:
            authorization-uri: ${spring-config.security.oauth2.client.provider.keycloak.authorization-uri}
            token-uri: ${spring-config.security.oauth2.client.provider.keycloak.token-uri}
            user-info-uri: ${spring-config.security.oauth2.client.provider.keycloak.user-info-uri}
            jwk-set-uri: ${spring-config.security.oauth2.client.provider.keycloak.jwk-set-uri}
            user-name-attribute: preferred_username

management:
  endpoint:
    prometheus:
      enabled: false
    metrics:
      enabled: true
    health:
      show-details: always
    endpoints:
      web:
        exposure:
          include: health,info,metrics,openapi-user,openapi-admin,openapi-system

camel:
  component:
    activemq:
      broker-u-r-l: ${camel-config.component.activemq.broker-u-r-l}
      username: ${camel-config.component.activemq.username}
      password: ${camel-config.component.activemq.password}
      transacted: true
      use-pooled-connection: true

# ==================================================================================================
# CONTEXT CONFIGURATION
# ==================================================================================================

context:
  demo:
    api-client:
      batch-process:
        subscriber: ${context-config.demo.api-client.batch-process.subscriber}
        publisher: ${context-config.demo.api-client.batch-process.publisher}
      domain-message:
        subscriber: ${context-config.demo.api-client.domain-message.subscriber}
        publisher: ${context-config.demo.api-client.domain-message.publisher}
        forwarder: ${context-config.demo.api-client.domain-message.forwarder}
    domain-detail:
      domain-message:
        publisher: ${context-config.demo.domain-detail.domain-message.publisher}
